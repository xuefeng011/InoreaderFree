<storeApps:VisualStateAwarePage
    x:Class="Inoreader.Views.Pages.StreamPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:storeApps="using:Microsoft.Practices.Prism.StoreApps"
    xmlns:mvvm="using:Microsoft.Practices.Prism.Mvvm"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:behaviors="using:Inoreader.Behaviors"
    xmlns:resources="using:Inoreader.Resources"
    xmlns:details="using:Inoreader.Views.Details"
    xmlns:converters="using:Inoreader.Converters"
    xmlns:controls="using:Inoreader.Views.Controls"
    xmlns:services="using:Inoreader.Services"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
	mvvm:ViewModelLocator.AutoWireViewModel="true">

	<storeApps:VisualStateAwarePage.Resources>

		<behaviors:DataContextPresenter DataContext="{Binding}" 
										x:Key="DataContextPresenter" />

		<converters:StreamViewToVisibilityConverter x:Key="StreamViewToVisibilityConverter" />
		<services:StreamView x:Key="StreamListView">ListView</services:StreamView>
		<services:StreamView x:Key="StreamExpandedView">ExpandedView</services:StreamView>

		<FontFamily x:Key="ContentControlThemeFontFamily">Segoe WP</FontFamily>
		<x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
		<Thickness x:Key="ListViewItemMargin">0</Thickness>
		<SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush" Color="Transparent"/>
		<x:Double x:Key="CheckBoxBorderThemeThickness">2.5</x:Double>
		<x:Double x:Key="ListViewItemContentOffsetX">-40.5</x:Double>
		<Thickness x:Key="ListViewItemMultiselectCheckBoxMargin">0,9.5,0,0</Thickness>
		<Thickness x:Key="GridViewItemMultiselectBorderThickness">2.5</Thickness>
		<x:Double x:Key="ListViewItemDisabledThemeOpacity">0.4</x:Double>
		<x:Double x:Key="ListViewItemContentTranslateX">40.5</x:Double>
		<x:Double x:Key="ListViewItemReorderHintThemeOffset">32</x:Double>
		<Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
			<Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
			<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="TabNavigation" Value="Local"/>
			<Setter Property="IsHoldingEnabled" Value="False"/>
			<Setter Property="Margin" Value="{ThemeResource ListViewItemMargin}"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0,0,0,5" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
						<Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
							<Border.RenderTransform>
								<ScaleTransform x:Name="ContentScaleTransform"/>
							</Border.RenderTransform>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="Pressed" To="Normal">
											<Storyboard>
												<PointerUpThemeAnimation Storyboard.TargetName="TiltContainer"/>
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<!--<PointerDownThemeAnimation Storyboard.TargetName="TiltContainer"/>-->
										</Storyboard>
									</VisualState>
									<VisualState x:Name="CheckboxPressed">
										<Storyboard>
											<PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="DataVirtualizationStates">
									<VisualState x:Name="DataAvailable"/>
									<VisualState x:Name="DataPlaceholder">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
												<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="MultiSelectStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
										<VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NoMultiSelect"/>
									<VisualState x:Name="ListMultiSelect">
										<Storyboard>
											<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
											<DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="GridMultiSelect">
										<Storyboard>
											<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ReorderModeStates">
									<VisualStateGroup.Transitions>
										<VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="ReorderEnabled">
										<Storyboard>
											<DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Reorderable">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
												<LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
												<LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
												<LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
												<LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ReorderDisabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ReorderHintStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="NoReorderHint"/>
									<VisualState x:Name="BottomReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="RightReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="TopReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="LeftReorderHint">
										<Storyboard>
											<DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Grid x:Name="ReorderHintContent" Background="Transparent">
								<Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
									<Border x:Name="CheckboxOuterContainer">
										<Border.Clip>
											<RectangleGeometry Rect="0,0,25.5,25.5"/>
										</Border.Clip>
										<Grid x:Name="CheckboxContainer">
											<Grid.RenderTransform>
												<TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
											</Grid.RenderTransform>
											<Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
											<Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
										</Grid>
									</Border>
								</Border>
								<Border x:Name="ContentContainer">
									<Border x:Name="TiltContainer">
										<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
											<Border.RenderTransform>
												<TranslateTransform x:Name="ContentBorderTranslateTransform"/>
											</Border.RenderTransform>
											<Grid>
												<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
												<TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
												<Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
											</Grid>
										</Border>
									</Border>
								</Border>
								<Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
									<Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
										<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
										<Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
									</Grid>
								</Border>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<resources:StreamItemTemplateSelector x:Key="StreamItemExpandedViewTemplateSelector">
			<resources:StreamItemTemplateSelector.StreamItemTemplate>
				<DataTemplate>
					<controls:SwipeControl LeftCommand="{Binding DataContext.ReadItemCommand, Source={StaticResource DataContextPresenter}}" 
										   RightCommand="{Binding DataContext.StarItemCommand, Source={StaticResource DataContextPresenter}}">
						<controls:SwipeControl.ContentTemplate>
							<DataTemplate>
								<Border BorderThickness="0,1" 
										BorderBrush="{Binding IsSelected, Converter={StaticResource IsSelectedToBrushConverter}}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="6" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<Grid Background="{Binding Unread, Converter={StaticResource UnreadToBrushConverter}}" />

										<StackPanel Margin="5" Grid.Column="1">
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition />
													<ColumnDefinition Width="Auto" />
												</Grid.ColumnDefinitions>

												<TextBlock Text="{Binding Title}"
													   FontSize="14" 
													   TextWrapping="WrapWholeWords" TextTrimming="WordEllipsis" MaxLines="2" />

												<TextBlock Grid.Column="1" 
													   Text="{Binding Published, Converter={StaticResource SmartDateToStringConverter}}"
													   FontSize="11"
													   FontWeight="SemiLight" />
											</Grid>

											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition />
													<ColumnDefinition Width="20" />
												</Grid.ColumnDefinitions>

												<RichTextBlock Grid.Column="0"
															   IsTextSelectionEnabled="False">
													<interactivity:Interaction.Behaviors>
														<behaviors:RichTextBlockHtmlBehavior HtmlContent="{Binding Content}" />
													</interactivity:Interaction.Behaviors>
												</RichTextBlock>

												<controls:StarControl Grid.Column="1" 
																Visibility="{Binding Starred, Converter={StaticResource BooleanToVisibilityConverter}}"
																Width="15" 
																Height="15" 
																HorizontalAlignment="Right" 
																VerticalAlignment="Top" />
											</Grid>
										</StackPanel>										
									</Grid>
								</Border>
							</DataTemplate>
						</controls:SwipeControl.ContentTemplate>
						<controls:SwipeControl.LeftContentTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
									<controls:UnreadControl Visibility="{Binding Unread, Converter={StaticResource BooleanToVisibilityConverter}}"
																Width="15" 
																Height="15" />

									<controls:ReadControl Visibility="{Binding Unread, Converter={StaticResource BooleanToInverseVisibilityConverter}}"
																Width="15" 
																Height="15" />

									<TextBlock Text="read" FontSize="16" Foreground="White" Margin="5,0,0,0" />
								</StackPanel>
							</DataTemplate>
						</controls:SwipeControl.LeftContentTemplate>
						<controls:SwipeControl.RightContentTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
									<TextBlock Text="star" Margin="0,0,5,0" FontSize="16" Foreground="White" />

									<controls:FilledStarControl Visibility="{Binding Starred, Converter={StaticResource BooleanToVisibilityConverter}}"
																Width="15" 
																Height="15" />

									<controls:EmptyStarControl Visibility="{Binding Starred, Converter={StaticResource BooleanToInverseVisibilityConverter}}"
																Width="15" 
																Height="15" />
								</StackPanel>
							</DataTemplate>
						</controls:SwipeControl.RightContentTemplate>
					</controls:SwipeControl>
				</DataTemplate>
			</resources:StreamItemTemplateSelector.StreamItemTemplate>
			<resources:StreamItemTemplateSelector.EmptySpaceTemplate>
				<DataTemplate>
					<details:EmptySpaceItem />
				</DataTemplate>
			</resources:StreamItemTemplateSelector.EmptySpaceTemplate>
		</resources:StreamItemTemplateSelector>

		<resources:StreamItemTemplateSelector x:Key="StreamItemListViewTemplateSelector">
			<resources:StreamItemTemplateSelector.StreamItemTemplate>
				<DataTemplate>
					<controls:SwipeControl LeftCommand="{Binding DataContext.ReadItemCommand, Source={StaticResource DataContextPresenter}}" 
										   RightCommand="{Binding DataContext.StarItemCommand, Source={StaticResource DataContextPresenter}}">
						<controls:SwipeControl.ContentTemplate>
							<DataTemplate>
								<Border BorderThickness="0,1" 
										BorderBrush="{Binding IsSelected, Converter={StaticResource IsSelectedToBrushConverter}}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="6" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>

										<Grid Background="{Binding Unread, Converter={StaticResource UnreadToBrushConverter}}" />

										<controls:StreamListViewControl Grid.Column="1" Margin="5" HtmlContent="{Binding Content}" Title="{Binding Title}" Published="{Binding Published}" />										
									</Grid>
								</Border>
							</DataTemplate>
						</controls:SwipeControl.ContentTemplate>
						<controls:SwipeControl.LeftContentTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
									<controls:UnreadControl Visibility="{Binding Unread, Converter={StaticResource BooleanToVisibilityConverter}}"
																Width="15" 
																Height="15" />

									<controls:ReadControl Visibility="{Binding Unread, Converter={StaticResource BooleanToInverseVisibilityConverter}}"
																Width="15" 
																Height="15" />

									<TextBlock Text="read" FontSize="16" Foreground="White" Margin="5,0,0,0" />
								</StackPanel>
							</DataTemplate>
						</controls:SwipeControl.LeftContentTemplate>
						<controls:SwipeControl.RightContentTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
									<TextBlock Text="star" Margin="0,0,5,0" FontSize="16" Foreground="White" />

									<controls:FilledStarControl Visibility="{Binding Starred, Converter={StaticResource BooleanToVisibilityConverter}}"
																Width="15" 
																Height="15" />

									<controls:EmptyStarControl Visibility="{Binding Starred, Converter={StaticResource BooleanToInverseVisibilityConverter}}"
																Width="15" 
																Height="15" />
								</StackPanel>
							</DataTemplate>
						</controls:SwipeControl.RightContentTemplate>
					</controls:SwipeControl>
				</DataTemplate>
			</resources:StreamItemTemplateSelector.StreamItemTemplate>
			<resources:StreamItemTemplateSelector.EmptySpaceTemplate>
				<DataTemplate>
					<details:EmptySpaceItem />
				</DataTemplate>
			</resources:StreamItemTemplateSelector.EmptySpaceTemplate>
		</resources:StreamItemTemplateSelector>

		<converters:ZeroCountToVisibilityConverter x:Key="ZeroCountToVisibilityConverter" VisibleCount="1" />
	</storeApps:VisualStateAwarePage.Resources>

	<Page.BottomAppBar>
		<CommandBar>
			<AppBarToggleButton x:Uid="SetReadAppBarButton"
								Label="read"
								Icon="Read" 
								IsChecked="{Binding CurrentItemRead, Mode=TwoWay}"
								IsEnabled="{Binding CurrentItemReadEnabled}" />

			<AppBarToggleButton x:Uid="SetStarAppBarButton"
								Label="star"
								Icon="Favorite"
								IsChecked="{Binding CurrentItemStarred, Mode=TwoWay}"
								IsEnabled="{Binding CurrentItemStarredEnabled}"/>

			<AppBarButton x:Uid="OpenInWebAppBarButton"
						  Icon="World"
						  Label="web"
						  Command="{Binding OpenWebCommand}"/>

			<AppBarButton Icon="Refresh" x:Uid="RefreshAppBarButton" Label="refresh" Command="{Binding RefreshCommand}" />

			<CommandBar.SecondaryCommands>
				<AppBarButton x:Uid="ShareAppBarButton"
							  Icon="ReShare"
							  Label="share"
							  Command="{Binding ShareCommand}"/>

				<AppBarButton x:Uid="MarkAllAsReadAppBarButton" 
							  Label="mark all as read"
							  Command="{Binding MarkAllAsReadCommand}"/>
			</CommandBar.SecondaryCommands>
		</CommandBar>
	</Page.BottomAppBar>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<TextBlock Text="{Binding Title}" Style="{StaticResource PageHeaderTextStyle}" TextWrapping="WrapWholeWords" MaxLines="2" TextTrimming="WordEllipsis" />
		<details:OfflineBar Grid.Row="0"
		                    Visibility="{Binding IsOffline, Converter={StaticResource BooleanToVisibilityConverter}}" />
		<ProgressBar Grid.Row="0" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" />

		<ListView Grid.Row="1" 
				  x:Name="ItemsListView"
				  ItemsSource="{Binding Items}" 
				  ItemContainerStyle="{StaticResource ListViewItemStyle1}"
				  ItemTemplateSelector="{StaticResource StreamItemExpandedViewTemplateSelector}" 
				  IsItemClickEnabled="True">
			<interactivity:Interaction.Behaviors>
				<behaviors:ItemsScrollBehavior Command="{Binding ItemsScrollCommand}" />
				<core:EventTriggerBehavior EventName="ItemClick">
					<core:InvokeCommandAction Command="{Binding SelectItemCommand}" 
											  InputConverter="{StaticResource ItemClickEventArgsToItemConverter}" />
				</core:EventTriggerBehavior>
			</interactivity:Interaction.Behaviors>
		</ListView>

		<TextBlock Grid.Row="1" 
				   x:Uid="EverythingReadBlock"
		           Visibility="{Binding Items.Count, Converter={StaticResource ZeroCountToVisibilityConverter}}" 
				   Style="{StaticResource EverythingReadTextBlockStyle}" />

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="ExpandedViewState" />
				<VisualState x:Name="ListViewState">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsListView" Storyboard.TargetProperty="ItemTemplateSelector">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource StreamItemListViewTemplateSelector}" />
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</storeApps:VisualStateAwarePage>

